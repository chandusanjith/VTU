CREATE TABLE CUSTOMERS(
   CUST_ID   INT              NOT NULL,
   CUST_NAME VARCHAR (20)     NOT NULL,
   CUST_AGE  INT              NOT NULL,
   CUST_ADDRESS  CHAR (25) ,
   CUST_SALARY   DECIMAL (18, 2),       
   PRIMARY KEY (CUST_ID)
);


INSERT INTO CUSTMERS VALUES(1,'CHANDU1',24,'DAVANGERE',180500.25);
INSERT INTO CUSTMERS VALUES(2,'CHANDU2',26,'DAVANGERE',180600.25);
INSERT INTO CUSTMERS VALUES(3,'CHANDU3',28,'DAVANGERE',180800.25);
INSERT INTO CUSTMERS VALUES(4,'CHANDU4',30,'DAVANGERE',180900.25);


Open an SSH client.
Locate your private key file. The key used to launch this instance is PL-Abend-django.pem
Run this command, if necessary, to ensure your key is not publicly viewable.

 chmod 400 PL-Abend-django.pem
Connect to your instance using its Public DNS:

 ec2-13-235-36-17.ap-south-1.compute.amazonaws.com
Example:

 ssh -i "PL-Abend-django.pem" ubuntu@ec2-13-235-36-17.ap-south-1.compute.amazonaws.com


SELECT JSON_OBJECT (
    KEY 'CUST_ID' VALUE c.CUST_ID,
    KEY 'CUST_NAME' VALUE c.CUST_NAME,
    KEY 'CUST_AGE' VALUE c.CUST_AGE,
    KEY 'CUST_ADDRESS' VALUE c.CUST_ADDRESS,
    KEY 'CUST_SALARY' VALUE c.CUST_SALARY
    ) "Department Objects"
  FROM customers c
  ORDER BY c.CUST_ID;




#!/usr/bin/env python

import socket


TCP_IP = '127.0.0.1'
TCP_PORT = 5005
BUFFER_SIZE = 10  # Normally 1024, but we want fast response

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((TCP_IP, TCP_PORT))
s.listen(1)

conn, addr = s.accept()
print 'Connection address:', addr
while 1:
    data = conn.recv(BUFFER_SIZE)
    if not data: break
    print "received data:", data
    conn.send(data)  # echo
conn.close()




https://taskjson.parameterlabs.repl.co/API/V1/Customers


